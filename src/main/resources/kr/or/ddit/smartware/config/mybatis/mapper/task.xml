<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="task">
	<resultMap id="clobmap" type="hashmap">
    	<result property="TASK_CONT" column="TASK_CONT" jdbcType="CLOB" javaType="java.lang.String"/>
    	<result property="RS" column="RS" jdbcType="CLOB" javaType="java.lang.String"/>
	</resultMap>

	<!-- 프로젝트의 전체 업무 리스트 반환 -->
	<select id="getAllProjectTask" parameterType="String" resultType="task">
		select *
		  from task
		 where pro_id = #{pro_id}
		 order by st_dt, end_dt
	</select>
	
	<!-- 프로젝트의 사원의 업무 리스트 반환 -->
	<select id="getEmpProjectTask" parameterType="map" resultType="task">
		select *
		  from task
		 where pro_id = #{pro_id}
		   and task_id in (select task_id
		                     from pro_task
		                    where emp_id = #{emp_id})
		 order by st_dt, end_dt
	</select>

	<!-- 주간 업무 리스트 반환 -->
	<select id="getWeekTask" parameterType="map" resultType="task">
		select *
		  from task
		 where task_id in (select task_id
		                     from pro_task
		                    where pro_id = #{pro_id}
		                      and emp_id = #{emp_id}
		                      and pa_task_id is not null)
		   and to_number(to_char(trunc(st_dt, 'iw'),'WW')) <![CDATA[<=]]> to_number(to_char(trunc(sysdate, 'iw'),'WW')) 
		   and to_number(to_char(trunc(end_dt, 'iw'),'WW')) >= to_number(to_char(trunc(sysdate, 'iw'),'WW'))
		 order by st_dt, end_dt
	</select>
	
	<!-- 지연중인 업무 리스트 반환 -->
	<select id="getDelayTask" parameterType="map" resultType="task">
		select *
		  from task
		 where task_id in (select task_id
		                     from pro_task
		                    where pro_id = #{pro_id}
		                      and emp_id = #{emp_id}
		                      and pa_task_id is not null)
		   and end_dt <![CDATA[<=]]> trunc(sysdate, 'iw')
		   and per <![CDATA[<]]> 100
		 order by st_dt, end_dt
	</select>

	<!-- 프로젝트의 전체 일감 반환(gantt) -->
	<select id="getAllGantt" parameterType="String" resultType="hashmap" resultMap="clobmap">
		select task.*, connect_by_root(task_cont) rs 
		  from task
		 start with pro_id = #{pro_id}
		   and pa_task_id is null
	   connect by prior task_id = pa_task_id
		 order siblings by task_id
	</select>
	 
	<!-- 프로젝트의 사원 일감 반환(gantt) -->
	<select id="getEmpGantt" parameterType="map" resultType="hashmap" resultMap="clobmap">
		select task.*, connect_by_root(task_cont) rs 
		  from task
		 where task_id in (select task_id
		                     from pro_task
		                    where pro_id = #{pro_id}
		                      and emp_id = #{emp_id})
		 start with pro_id = #{pro_id}
		   and pa_task_id is null
	   connect by prior task_id = pa_task_id
		 order siblings by task_id
	</select>
</mapper>